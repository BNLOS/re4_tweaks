#pragma once
#include "basic_types.h"

enum UNIT_BE_FLAG : uint32_t
{
	UNIT_BE_FLAG_ALIVE = 0x1,
	UNIT_BE_FLAG_TRANS = 0x2,
	UNIT_BE_FLAG_ALTAMBLIGHTCOLOR = 0x8,
	UNIT_BE_FLAG_DRAWFOOTSHADOW = 0x10,
	UNIT_BE_FLAG_MOVE = 0x20,
	UNIT_BE_FLAG_DEAD = 0x200,
	UNIT_BE_FLAG_DESTRUCT = 0x400,
	UNIT_BE_FLAG_NO_SUSPEND = 0x800,
	UNIT_BE_FLAG_IGNOREDRAWDIST = 0x1000,
	UNIT_BE_FLAG_CONTIGUOUSPARTS = 0x2000,
	UNIT_BE_FLAG_DISABLEMOTION = 0x4000,
	UNIT_BE_FLAG_DISABLELIGHTING = 0x8000,
	UNIT_BE_FLAG_SIMPLELIGHTING = 0x20000,
	UNIT_BE_FLAG_CLOTHNOSCALEAPPLY = 0x100000,
	UNIT_BE_FLAG_CLOTHRESET = 0x200000,
	UNIT_BE_FLAG_GLOBALILLUMINATION = 0x1000000,
	UNIT_BE_FLAG_INVERTFLAG0x40 = 0x8000000,
};

class cUnit
{
public:
	uint32_t be_flag_4;
	cUnit* pNext_8;

	virtual ~cUnit() = 0;
	virtual void beginEvent(uint32_t flag) = 0;
	virtual void endEvent(uint32_t flag) = 0;

	static std::string GetBeFlagName(int flagIndex);
};
assert_size(cUnit, 0xC);
